{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total Number of Players</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>576</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Total Number of Players\n",
       "0                      576"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dependencies and Setup\n",
    "#=============================================================================================================================\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "dollar_sign=pd.options.display.float_format = '${:,.2f}'.format        #formatting all the float numbers\n",
    "file = \"purchase_data.csv\"\n",
    "purchase_data = pd.read_csv(file)                                      # Read Purchasing File and store into Pandas\n",
    "renamed_df = purchase_data.rename(columns={\"SN\": \"Players\",\n",
    "                                        \"Item ID\": \"Product ID\",\n",
    "                                        \"Item Name\": \"Product Name\",\n",
    "                                        \"Purchase ID\":\"PO\"})           #Renaming the columns to make it friendlier\n",
    "clean=renamed_df.drop_duplicates(['Players'],keep='first')             #Cleaning duplicates from Players\n",
    "players=clean['Players'].count()                                       #Calculating the total number of Players                                        \n",
    "data_d=pd.DataFrame({\"Total Number of Players\":[players]})             #building dataframe to show the results\n",
    "data_d                                                                 #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Number of Unique Items</th>\n",
       "      <th>Average Price</th>\n",
       "      <th>Number of Purchases</th>\n",
       "      <th>Total Revenue</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>179</td>\n",
       "      <td>$3.05</td>\n",
       "      <td>780</td>\n",
       "      <td>$2,379.77</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Number of Unique Items  Average Price  Number of Purchases  Total Revenue\n",
       "0                     179          $3.05                  780      $2,379.77"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Player Count\n",
    "#============================================================================================================================\n",
    "Average_Price=renamed_df[\"Price\"].mean()                        #Calculating average price\n",
    "Total_Revenue=renamed_df[\"Price\"].sum()                         #Calculating total revenue\n",
    "Total_Purchases=renamed_df[\"PO\"].count()                        #Calculating total purchases\n",
    "Unique_Items=renamed_df['Product Name'].nunique()               #Calculating unique items\n",
    "\n",
    "data=pd.DataFrame({\"Number of Unique Items\":[Unique_Items],     #building dataframe to show the results\n",
    "                \"Average Price\":[Average_Price],\n",
    "                \"Number of Purchases\":[Total_Purchases],\n",
    "                \"Total Revenue\":[Total_Revenue]}).round(2)\n",
    "\n",
    "data                                                            #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total Count</th>\n",
       "      <th>Percentage of Players</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>81</td>\n",
       "      <td>14.06%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>484</td>\n",
       "      <td>84.03%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other / Non-Disclosed</th>\n",
       "      <td>11</td>\n",
       "      <td>1.91%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Total Count Percentage of Players\n",
       "Gender                                                  \n",
       "Female                          81                14.06%\n",
       "Male                           484                84.03%\n",
       "Other / Non-Disclosed           11                 1.91%"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Gender Demographics\n",
    "#=============================================================================================================================\n",
    "#Percentage and Count of Male Players\n",
    "#Percentage and Count of Female Players\n",
    "#Percentage and Count of Other / Non-Disclosed\n",
    "\n",
    "gen_dem_count=clean.groupby('Gender').count().PO                        #Calculating the total count of Players\n",
    "e=(gen_dem_count/players*100).round(2)                                  #Calculating the percentage of Players\n",
    "\n",
    "gender_demo=pd.DataFrame({\"Total Count\":gen_dem_count,\n",
    "                \"Percentage of Players\":e.astype(str) + '%'})           #creating the new dataframe to show the results\n",
    "\n",
    "gender_demo                                                             #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Average Purchase Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "      <th>Avg Tot Purchase Per Person</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>113</td>\n",
       "      <td>$3.20</td>\n",
       "      <td>$361.94</td>\n",
       "      <td>$4.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>652</td>\n",
       "      <td>$3.02</td>\n",
       "      <td>$1,967.64</td>\n",
       "      <td>$4.07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Other / Non-Disclosed</th>\n",
       "      <td>15</td>\n",
       "      <td>$3.35</td>\n",
       "      <td>$50.19</td>\n",
       "      <td>$4.56</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Purchase Count  Average Purchase Price  \\\n",
       "Gender                                                          \n",
       "Female                            113                   $3.20   \n",
       "Male                              652                   $3.02   \n",
       "Other / Non-Disclosed              15                   $3.35   \n",
       "\n",
       "                       Total Purchase Value  Avg Tot Purchase Per Person  \n",
       "Gender                                                                    \n",
       "Female                              $361.94                        $4.47  \n",
       "Male                              $1,967.64                        $4.07  \n",
       "Other / Non-Disclosed                $50.19                        $4.56  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Purchasing Analysis (Gender)\n",
    "#============================================================================================================================\n",
    "\n",
    "#Run basic calculations to obtain purchase count, avg. purchase price, avg. purchase total per person etc. by gender\n",
    "#Create a summary data frame to hold the results\n",
    "#Optional: give the displayed data cleaner formatting\n",
    "#Display the summary data frame\n",
    "\n",
    "price_count=renamed_df.groupby('Gender').count().Price      #creating price count series\n",
    "avg_price=renamed_df.groupby('Gender').mean().Price         #creating avg price series \n",
    "sum_price=renamed_df.groupby('Gender').sum().Price          #creating total purchase series\n",
    "\n",
    "gen_dem_count=clean.groupby('Gender').count().PO            #Calculating the total count of Players\n",
    "gen_dem_price=renamed_df.groupby('Gender').sum().Price      #Calculating the total purchase\n",
    "e=gen_dem_price/gen_dem_count                               #Calculating the percentage per person\n",
    "\n",
    "pur_ana_gen=pd.DataFrame({\"Purchase Count\":price_count,\n",
    "                \"Average Purchase Price\":avg_price,\n",
    "                \"Total Purchase Value\":sum_price,\n",
    "                \"Avg Tot Purchase Per Person\":e}).round(2)  #creating the new dataframe\n",
    "pur_ana_gen                                                 #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\gaston.alvarado\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\ipykernel_launcher.py:14: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Total Count</th>\n",
       "      <th>Percentage of Players</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age Group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Younger than 10</th>\n",
       "      <td>17</td>\n",
       "      <td>2.95%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10-14</th>\n",
       "      <td>22</td>\n",
       "      <td>3.59%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15-19</th>\n",
       "      <td>107</td>\n",
       "      <td>17.44%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20-24</th>\n",
       "      <td>258</td>\n",
       "      <td>46.79%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25-29</th>\n",
       "      <td>77</td>\n",
       "      <td>12.95%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30-34</th>\n",
       "      <td>52</td>\n",
       "      <td>9.36%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35-39</th>\n",
       "      <td>31</td>\n",
       "      <td>5.26%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40 and Older</th>\n",
       "      <td>12</td>\n",
       "      <td>1.67%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Total Count Percentage of Players\n",
       "Age Group                                         \n",
       "Younger than 10           17                 2.95%\n",
       "10-14                     22                 3.59%\n",
       "15-19                    107                17.44%\n",
       "20-24                    258                46.79%\n",
       "25-29                     77                12.95%\n",
       "30-34                     52                 9.36%\n",
       "35-39                     31                 5.26%\n",
       "40 and Older              12                 1.67%"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Age Demographics\n",
    "#===========================================================================================================================\n",
    "#Establish bins for ages\n",
    "#Categorize the existing players using the age bins. Hint: use pd.cut()\n",
    "#Calculate the numbers and percentages by age group\n",
    "#Create a summary data frame to hold the results\n",
    "#Optional: round the percentage column to two decimal points\n",
    "#Display Age Demographics Table\n",
    "\n",
    "bins = [0,9,14,19,24,29,34,39,200]\n",
    "group_labels = [\"Younger than 10\", \"10-14\", \"15-19\", \"20-24\", \n",
    "                \"25-29\", \"30-34\", \"35-39\", \"40 and Older\"]\n",
    "clean[\"Age Group\"]=pd.cut(clean[\"Age\"], bins, \n",
    "                  labels=group_labels)                             #creating bins and group labels by age\n",
    "\n",
    "renamed_df[\"Age Group\"]=pd.cut(renamed_df[\"Age\"], bins, \n",
    "                  labels=group_labels)      \n",
    "\n",
    "tot_count=clean.groupby('Age Group').count().Players               #creating players total count\n",
    "per_play=renamed_df.groupby('Age Group').count().Players           #creating averace price per player  \n",
    "players=per_play.sum()\n",
    "p=(per_play/players*100).round(2)                                  #calculating the percentages\n",
    "\n",
    "age_demo=pd.DataFrame({\"Total Count\":tot_count,\n",
    "                \"Percentage of Players\":p.astype(str) + '%'})                        #creating the new dataframe\n",
    "age_demo                                                           #displaying the results\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\gaston.alvarado\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\ipykernel_launcher.py:13: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy\n",
      "  del sys.path[0]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Avg Purchase Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "      <th>Average Total Purchase per Person</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Age Group</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Younger than 10</th>\n",
       "      <td>23</td>\n",
       "      <td>$3.35</td>\n",
       "      <td>$77.13</td>\n",
       "      <td>$3.67</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10-14</th>\n",
       "      <td>28</td>\n",
       "      <td>$2.96</td>\n",
       "      <td>$82.78</td>\n",
       "      <td>$3.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15-19</th>\n",
       "      <td>136</td>\n",
       "      <td>$3.04</td>\n",
       "      <td>$412.89</td>\n",
       "      <td>$4.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20-24</th>\n",
       "      <td>365</td>\n",
       "      <td>$3.05</td>\n",
       "      <td>$1,114.06</td>\n",
       "      <td>$6.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25-29</th>\n",
       "      <td>101</td>\n",
       "      <td>$2.90</td>\n",
       "      <td>$293.00</td>\n",
       "      <td>$3.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30-34</th>\n",
       "      <td>73</td>\n",
       "      <td>$2.93</td>\n",
       "      <td>$214.00</td>\n",
       "      <td>$3.57</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35-39</th>\n",
       "      <td>41</td>\n",
       "      <td>$3.60</td>\n",
       "      <td>$147.67</td>\n",
       "      <td>$3.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40 and Older</th>\n",
       "      <td>13</td>\n",
       "      <td>$2.94</td>\n",
       "      <td>$38.24</td>\n",
       "      <td>$2.94</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Purchase Count  Avg Purchase Price  Total Purchase Value  \\\n",
       "Age Group                                                                   \n",
       "Younger than 10              23               $3.35                $77.13   \n",
       "10-14                        28               $2.96                $82.78   \n",
       "15-19                       136               $3.04               $412.89   \n",
       "20-24                       365               $3.05             $1,114.06   \n",
       "25-29                       101               $2.90               $293.00   \n",
       "30-34                        73               $2.93               $214.00   \n",
       "35-39                        41               $3.60               $147.67   \n",
       "40 and Older                 13               $2.94                $38.24   \n",
       "\n",
       "                 Average Total Purchase per Person  \n",
       "Age Group                                           \n",
       "Younger than 10                              $3.67  \n",
       "10-14                                        $3.45  \n",
       "15-19                                        $4.30  \n",
       "20-24                                        $6.83  \n",
       "25-29                                        $3.76  \n",
       "30-34                                        $3.57  \n",
       "35-39                                        $3.99  \n",
       "40 and Older                                 $2.94  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Purchasing Analysis (Age)\n",
    "#============================================================================================================================\n",
    "#Bin the purchase_data data frame by age\n",
    "#Run basic calculations to obtain purchase count, avg. purchase price, avg. purchase total per person etc. in the table below\n",
    "#Create a summary data frame to hold the results\n",
    "#Optional: give the displayed data cleaner formatting\n",
    "#Display the summary data frame\n",
    "\n",
    "bins = [0,9,14,19,24,29,34,39,200]\n",
    "group_labels = [\"Younger than 10\", \"10-14\", \"15-19\", \"20-24\",\"25-29\", \"30-34\", \"35-39\", \"40 and Older\"]\n",
    "clean[\"Age Group\"]=pd.cut(clean[\"Age\"],bins, labels=group_labels)        #creating bins and group labels by age\n",
    "\n",
    "pur_count=renamed_df.groupby('Age Group').count().Players                #creating purchase count series\n",
    "av_pur_price=renamed_df.groupby('Age Group').mean().Price                #creating avg purchase price seeries\n",
    "pur_tot=renamed_df.groupby('Age Group').sum().Price                      #creating purchase total series\n",
    "group_unique_2=renamed_df.groupby('Age Group').nunique()                 #Selecting unique items for calculation\n",
    "unique_2=group_unique_2['Product Name']                                  #creating the series for the calculation\n",
    "\n",
    "f=pur_tot/unique_2                                                       #Calculating average purchase per person\n",
    "\n",
    "pur_ana_age=pd.DataFrame({\"Purchase Count\":pur_count,\n",
    "                \"Avg Purchase Price\":av_pur_price,\n",
    "                \"Total Purchase Value\":pur_tot,\n",
    "                 \"Average Total Purchase per Person\":f}).round(2)        #creating new dataframe\n",
    "\n",
    "pur_ana_age                                                              #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Avg Purchase Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Players</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Lisosia93</th>\n",
       "      <td>5</td>\n",
       "      <td>$3.79</td>\n",
       "      <td>$18.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Idastidru52</th>\n",
       "      <td>4</td>\n",
       "      <td>$3.86</td>\n",
       "      <td>$15.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chamjask73</th>\n",
       "      <td>3</td>\n",
       "      <td>$4.61</td>\n",
       "      <td>$13.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iral74</th>\n",
       "      <td>4</td>\n",
       "      <td>$3.40</td>\n",
       "      <td>$13.62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iskadarya95</th>\n",
       "      <td>3</td>\n",
       "      <td>$4.37</td>\n",
       "      <td>$13.10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Purchase Count  Avg Purchase Price  Total Purchase Value\n",
       "Players                                                              \n",
       "Lisosia93                 5               $3.79                $18.96\n",
       "Idastidru52               4               $3.86                $15.45\n",
       "Chamjask73                3               $4.61                $13.83\n",
       "Iral74                    4               $3.40                $13.62\n",
       "Iskadarya95               3               $4.37                $13.10"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Top Spenders\n",
    "#=============================================================================================================================\n",
    "#Run basic calculations to obtain the results in the table below\n",
    "#Create a summary data frame to hold the results\n",
    "#Sort the total purchase value column in descending order\n",
    "#Optional: give the displayed data cleaner formatting\n",
    "#Display a preview of the summary data frame\n",
    "\n",
    "renamed_df.reset_index()\n",
    "top_count=renamed_df.groupby('Players').count().PO                         #creating purchase count series\n",
    "top_price=renamed_df.groupby('Players').mean().Price                       #creating avg purchase price seeries\n",
    "top_spend=renamed_df.groupby('Players').sum().Price                        #creating total purchase series\n",
    "\n",
    "top_spend=pd.DataFrame({\"Purchase Count\":top_count,\n",
    "                \"Avg Purchase Price\":top_price,\n",
    "                \"Total Purchase Value\":top_spend}).round(2)                #creating new dataframe\n",
    "\n",
    "new_sort=top_spend.sort_values(by=\"Total Purchase Value\",ascending=False)  #sorting descending by total purchase value\n",
    "new_sort.head()                                                            #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Avg Purchase Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Product ID</th>\n",
       "      <th>Product Name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <th>Oathbreaker, Last Hope of the Breaking Storm</th>\n",
       "      <td>12</td>\n",
       "      <td>$4.23</td>\n",
       "      <td>$50.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <th>Fiery Glass Crusader</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.58</td>\n",
       "      <td>$41.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <th>Extraction, Quickblade Of Trembling Hands</th>\n",
       "      <td>9</td>\n",
       "      <td>$3.53</td>\n",
       "      <td>$31.77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <th>Nirvana</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.90</td>\n",
       "      <td>$44.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <th>Pursuit, Cudgel of Necromancy</th>\n",
       "      <td>8</td>\n",
       "      <td>$1.02</td>\n",
       "      <td>$8.16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                         Purchase Count  \\\n",
       "Product ID Product Name                                                   \n",
       "178        Oathbreaker, Last Hope of the Breaking Storm              12   \n",
       "145        Fiery Glass Crusader                                       9   \n",
       "108        Extraction, Quickblade Of Trembling Hands                  9   \n",
       "82         Nirvana                                                    9   \n",
       "19         Pursuit, Cudgel of Necromancy                              8   \n",
       "\n",
       "                                                         Avg Purchase Price  \\\n",
       "Product ID Product Name                                                       \n",
       "178        Oathbreaker, Last Hope of the Breaking Storm               $4.23   \n",
       "145        Fiery Glass Crusader                                       $4.58   \n",
       "108        Extraction, Quickblade Of Trembling Hands                  $3.53   \n",
       "82         Nirvana                                                    $4.90   \n",
       "19         Pursuit, Cudgel of Necromancy                              $1.02   \n",
       "\n",
       "                                                         Total Purchase Value  \n",
       "Product ID Product Name                                                        \n",
       "178        Oathbreaker, Last Hope of the Breaking Storm                $50.76  \n",
       "145        Fiery Glass Crusader                                        $41.22  \n",
       "108        Extraction, Quickblade Of Trembling Hands                   $31.77  \n",
       "82         Nirvana                                                     $44.10  \n",
       "19         Pursuit, Cudgel of Necromancy                                $8.16  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Most Popular Items\n",
    "#=============================================================================================================================\n",
    "#Retrieve the Item ID, Item Name, and Item Price columns\n",
    "#Group by Item ID and Item Name. Perform calculations to obtain purchase count, item price, and total purchase value\n",
    "#Create a summary data frame to hold the results\n",
    "#Sort the purchase count column in descending order\n",
    "#Optional: give the displayed data cleaner formatting\n",
    "#Display a preview of the summary data frame\n",
    "\n",
    "renamed_df.reset_index()\n",
    "most_count=renamed_df.groupby(['Product ID','Product Name']).count().PO        #creating purchase count series\n",
    "most_price=renamed_df.groupby(['Product ID','Product Name']).mean().Price      #creating avg purchase price seeries\n",
    "most_spend=renamed_df.groupby(['Product ID','Product Name']).sum().Price       #creating total purchase series\n",
    "\n",
    "\n",
    "mostprof=pd.DataFrame({\"Purchase Count\":most_count,\n",
    "                \"Avg Purchase Price\":most_price,\n",
    "                \"Total Purchase Value\":most_spend})                            #creating new dataframe\n",
    "\n",
    "new_sort2=mostprof.sort_values(by=\"Purchase Count\",ascending=False)            #sorting descending by purchase count value\n",
    "new_sort2.head()                                                               #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Purchase Count</th>\n",
       "      <th>Avg Purchase Price</th>\n",
       "      <th>Total Purchase Value</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Product ID</th>\n",
       "      <th>Product Name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <th>Oathbreaker, Last Hope of the Breaking Storm</th>\n",
       "      <td>12</td>\n",
       "      <td>$4.23</td>\n",
       "      <td>$50.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <th>Nirvana</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.90</td>\n",
       "      <td>$44.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <th>Fiery Glass Crusader</th>\n",
       "      <td>9</td>\n",
       "      <td>$4.58</td>\n",
       "      <td>$41.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <th>Final Critic</th>\n",
       "      <td>8</td>\n",
       "      <td>$4.88</td>\n",
       "      <td>$39.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <th>Singed Scalpel</th>\n",
       "      <td>8</td>\n",
       "      <td>$4.35</td>\n",
       "      <td>$34.80</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                         Purchase Count  \\\n",
       "Product ID Product Name                                                   \n",
       "178        Oathbreaker, Last Hope of the Breaking Storm              12   \n",
       "82         Nirvana                                                    9   \n",
       "145        Fiery Glass Crusader                                       9   \n",
       "92         Final Critic                                               8   \n",
       "103        Singed Scalpel                                             8   \n",
       "\n",
       "                                                         Avg Purchase Price  \\\n",
       "Product ID Product Name                                                       \n",
       "178        Oathbreaker, Last Hope of the Breaking Storm               $4.23   \n",
       "82         Nirvana                                                    $4.90   \n",
       "145        Fiery Glass Crusader                                       $4.58   \n",
       "92         Final Critic                                               $4.88   \n",
       "103        Singed Scalpel                                             $4.35   \n",
       "\n",
       "                                                         Total Purchase Value  \n",
       "Product ID Product Name                                                        \n",
       "178        Oathbreaker, Last Hope of the Breaking Storm                $50.76  \n",
       "82         Nirvana                                                     $44.10  \n",
       "145        Fiery Glass Crusader                                        $41.22  \n",
       "92         Final Critic                                                $39.04  \n",
       "103        Singed Scalpel                                              $34.80  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Most Profitable Items\n",
    "#=============================================================================================================================\n",
    "#Sort the above table by total purchase value in descending order\n",
    "#Optional: give the displayed data cleaner formatting\n",
    "#Display a preview of the data frame\n",
    "\n",
    "\n",
    "renamed_df.reset_index()\n",
    "most_count=renamed_df.groupby(['Product ID','Product Name']).count().PO        #creating purchase count series\n",
    "most_price=renamed_df.groupby(['Product ID','Product Name']).mean().Price      #creating avg purchase price seeries\n",
    "most_spend=renamed_df.groupby(['Product ID','Product Name']).sum().Price       #creating total purchase series\n",
    "\n",
    "\n",
    "mostprof=pd.DataFrame({\"Purchase Count\":most_count,\n",
    "                \"Avg Purchase Price\":most_price,\n",
    "                \"Total Purchase Value\":most_spend})                            #creating new dataframe\n",
    "\n",
    "new_sort2=mostprof.sort_values(by=\"Total Purchase Value\",ascending=False)      #sorting descending by total purchase value\n",
    "new_sort2.head()                                                               #displaying the results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
